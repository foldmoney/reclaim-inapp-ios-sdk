// swift-tools-version: 6.0
// The swift-tools-version declares the minimum version of Swift required to build this package.

// GENERATED FILE, DO NOT EDIT BY HAND

import PackageDescription

let sdkTargets = getSdkTargets()
let sdkTargetNames = sdkTargets.map { $0.name }

let package = Package(
    name: "ReclaimInAppSdk",
    defaultLocalization: "en",
    platforms: [
        .iOS(.v13),
        .macOS(.v10_15)
    ],
    products: [
        // Products define the executables and libraries a package produces, making them visible to other packages.
        .library(
            name: "ReclaimInAppSdk",
            targets: [
                "ReclaimInAppSdk",
            ] + sdkTargetNames
        )
    ],
    targets: [
        // Targets are the basic building blocks of a package, defining a module or a test suite.
        // Targets can depend on other targets in this package and products from dependencies.
        .target(
            name: "ReclaimInAppSdk",
            resources: [
                .process("Resources")
            ]
        ),
        .testTarget(
            name: "ReclaimInAppSdkTests",
            dependencies: ["ReclaimInAppSdk"]
        ),
    ] + sdkTargets
)

func getSdkTargets() -> [Target] {
    return [
        .binaryTarget(
            name: "App",
            path: "ReclaimXCFrameworks/App.xcframework"
        ),
        .binaryTarget(
            name: "Flutter",
            path: "ReclaimXCFrameworks/Flutter.xcframework"
        ),
        .binaryTarget(
            name: "FlutterPluginRegistrant",
            path: "ReclaimXCFrameworks/FlutterPluginRegistrant.xcframework"
        ),
        .binaryTarget(
            name: "OrderedSet",
            path: "ReclaimXCFrameworks/OrderedSet.xcframework"
        ),
        .binaryTarget(
            name: "cupertino_http",
            path: "ReclaimXCFrameworks/cupertino_http.xcframework"
        ),
        .binaryTarget(
            name: "device_info_plus",
            path: "ReclaimXCFrameworks/device_info_plus.xcframework"
        ),
        .binaryTarget(
            name: "flutter_inappwebview_ios",
            path: "ReclaimXCFrameworks/flutter_inappwebview_ios.xcframework"
        ),
        .binaryTarget(
            name: "flutter_secure_storage",
            path: "ReclaimXCFrameworks/flutter_secure_storage.xcframework"
        ),
        .binaryTarget(
            name: "fluttertoast",
            path: "ReclaimXCFrameworks/fluttertoast.xcframework"
        ),
        .binaryTarget(
            name: "objective_c",
            path: "ReclaimXCFrameworks/objective_c.xcframework"
        ),
        .binaryTarget(
            name: "package_info_plus",
            path: "ReclaimXCFrameworks/package_info_plus.xcframework"
        ),
        .binaryTarget(
            name: "path_provider_foundation",
            path: "ReclaimXCFrameworks/path_provider_foundation.xcframework"
        ),
        .binaryTarget(
            name: "permission_handler_apple",
            path: "ReclaimXCFrameworks/permission_handler_apple.xcframework"
        ),
        .binaryTarget(
            name: "reclaim_gnark_zkoperator",
            path: "ReclaimXCFrameworks/reclaim_gnark_zkoperator.xcframework"
        ),
        .binaryTarget(
            name: "share_plus",
            path: "ReclaimXCFrameworks/share_plus.xcframework"
        ),
        .binaryTarget(
            name: "shared_preferences_foundation",
            path: "ReclaimXCFrameworks/shared_preferences_foundation.xcframework"
        ),
        .binaryTarget(
            name: "sqflite_darwin",
            path: "ReclaimXCFrameworks/sqflite_darwin.xcframework"
        ),
        .binaryTarget(
            name: "url_launcher_ios",
            path: "ReclaimXCFrameworks/url_launcher_ios.xcframework"
        ),
    ]
}

